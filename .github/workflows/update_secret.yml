name: Update RAN_SECRET

on:
  workflow_dispatch:

jobs:
  update-secret:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [env1, env2]  # Define both environments in a matrix
    environment: ${{ matrix.environment }}  # Specify the environment
    
    steps:
      - name: Install necessary tools
        run: |
          sudo apt-get update
          sudo apt-get install jq python3 python3-pip

      - name: Install PyNaCl (Python bindings for LibSodium)
        run: pip3 install pynacl

      - name: Print PASS secret and URL
        run: |
          echo "PASS: ${{ secrets.PASS }}"
          echo "URL: ${{ vars.URL }}"
        
      - name: Generate random value for the secret
        id: generate-secret
        run: echo "secret=$(openssl rand -base64 32)" >> $GITHUB_ENV

      - name: Get public key for encryption
        id: get-public-key
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GOWRI_KEY }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/gowrisankar22/testworkflow/actions/secrets/public-key \
            -o public_key.json

          # Print the response for debugging
          cat public_key.json

          key=$(jq -r '.key' public_key.json)
          key_id=$(jq -r '.key_id' public_key.json)
          echo "key=$key" >> $GITHUB_ENV
          echo "key_id=$key_id" >> $GITHUB_ENV

      - name: Print Public Key
        run: echo "public_key=${{ env.key }}" | tee -a $GITHUB_ENV

      - name: Encrypt the secret using Python and provided script
        id: encrypt-secret
        run: |
          echo "
          from base64 import b64encode
          from nacl import encoding, public
        
          def encrypt(public_key: str, secret_value: str) -> str:
            public_key = public.PublicKey(public_key.encode('utf-8'), encoding.Base64Encoder())
            sealed_box = public.SealedBox(public_key)
            encrypted = sealed_box.encrypt(secret_value.encode('utf-8'))
            return b64encode(encrypted).decode('utf-8')
        
          # Encrypt the secret using the public key from GitHub
          public_key = '${{ env.key }}'
          secret_value = '${{ env.secret }}'
          encrypted_value = encrypt(public_key, secret_value)
        
          print(encrypted_value)  # Only print the value
          " > encrypt.py
        
          encrypted_value=$(python3 encrypt.py)
          echo "encrypted_value=${encrypted_value}" >> $GITHUB_ENV

      - name: Update RAN_SECRET in GitHub Secrets
        run: |
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GOWRI_KEY }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/gowrisankar22/testworkflow/actions/secrets/RAN_SECRET \
            -d "{\"encrypted_value\":\"${{ env.encrypted_value }}\", \"key_id\":\"${{ env.key_id }}\"}"
