name: Rotate and Update RAN_SECRET

on:
  workflow_dispatch:  # Allows manual triggering of the workflow
  schedule:           # Optional: Can set a schedule to rotate regularly
    - cron: '0 0 * * *' # Runs every day at midnight UTC (optional, adjust as needed)

jobs:
  rotate-secret:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      actions: write  # This grants write permission to update secrets

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate new secret
        id: generate-secret
        run: |
          # Generate a new random 64-character hexadecimal secret
          NEW_SECRET=$(openssl rand -hex 32)
          echo "New secret generated: $NEW_SECRET"
          echo "NEW_SECRET=${NEW_SECRET}" >> $GITHUB_ENV

      - name: Fetch repository public key
        id: fetch-key
        run: |
          # Fetch the public key for the repository
          response=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/actions/secrets/public-key)
          echo "$response" > response.json

          # Extract the key and key_id from the response
          PUBLIC_KEY=$(jq -r '.key' response.json)
          KEY_ID=$(jq -r '.key_id' response.json)

          echo "PUBLIC_KEY=${PUBLIC_KEY}" >> $GITHUB_ENV
          echo "KEY_ID=${KEY_ID}" >> $GITHUB_ENV

      - name: Encrypt the secret
        id: encrypt-secret
        run: |
          # Install OpenSSL if not available (necessary for encryption)
          sudo apt-get update && sudo apt-get install -y openssl

          # Base64 decode the public key and use it to encrypt the new secret
          ENCRYPTED_SECRET=$(echo -n "${{ env.NEW_SECRET }}" | \
            openssl rsautl -encrypt -pubin -inkey <(echo "${{ env.PUBLIC_KEY }}" | base64 --decode) | \
            base64 -w 0)

          echo "ENCRYPTED_SECRET=${ENCRYPTED_SECRET}" >> $GITHUB_ENV

      - name: Update GitHub secret
        run: |
          # Use GitHub's REST API to update the secret RAN_SECRET in the repository
          curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/actions/secrets/RAN_SECRET \
            -d "{\"encrypted_value\":\"${{ env.ENCRYPTED_SECRET }}\",\"key_id\":\"${{ env.KEY_ID }}\"}"

      - name: Log new secret value
        run: echo "The new secret RAN_SECRET was updated successfully."
